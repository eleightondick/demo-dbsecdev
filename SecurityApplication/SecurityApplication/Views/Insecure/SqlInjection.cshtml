@model SecurityApplication.Helpers.InsecureHelper
@{
    ViewBag.Title = "Sql Injection Demonstration";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.PeopleTableActions = false;
}

<h2>SQL Injection Demonstration</h2>

<p class="alert alert-info">Below shows the current state of the database records, and a text box for posting a near direct query to the database</p>

<div class="col-md-12">
    <h4>Current Contents of Model</h4>
    <table class="table table-bordered">
        <thead>
            <tr>
                <td>Id</td>
                <td>Company</td>
                <td>First Name</td>
                <td>Last Name</td>
            </tr>
            @Html.DisplayFor(m => m.People)
        </thead>
    </table>
    <p class="alert alert-danger">SQL on the backend that will be attempted: "delete from People where Id = [input]"</p>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.Statement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Statement, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Statement, "", new { @class = "text-danger" })
            </div>
        </div>
    }

</div>